buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.25.0"
    }
}
plugins {
    id 'application'
    id 'checkstyle'
    id 'idea'
    id 'java'
    id "com.github.johnrengelman.shadow" version "5.1.0"

    id 'org.beryx.jlink' version '2.16.0'
    id "org.kordamp.gradle.jdeps" version "0.7.0"
}

apply plugin: "com.github.spotbugs"
apply plugin: 'com.github.ben-manes.versions'

sourceCompatibility = 11
version = '5.5.0-SNAPSHOT'
group = "de.stups.slottool"

mainClassName = "de.hhu.stups.plues.modelgenerator.Main"

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

// https://simonharrer.wordpress.com/2013/09/17/building-command-line-apps-with-gradle/
run {
    if (project.hasProperty('args')) {
        //noinspection GroovyAssignabilityCheck
        args project.args.split(/\s+/)
    }
}

dependencies {
    compileOnly 'net.jcip:jcip-annotations:1.0'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.0.0-beta4'

    compile 'org.hibernate:hibernate-core:5.4.6.Final'
    compile 'org.hibernate:hibernate-jcache:5.4.6.Final'
    runtime 'org.hibernate:hibernate-c3p0:5.4.6.Final'

    compile 'c3p0:c3p0:0.9.1.2'
    compile 'org.ehcache:ehcache:3.3.1'
    compile 'com.github.gwenn:sqlite-dialect:0.1.0'

    compile 'org.jtwig:jtwig-core:5.87.0.RELEASE'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    runtime group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // logging
    compile 'org.slf4j:slf4j-api:1.7.28' // MIT
    compile 'ch.qos.logback:logback-core:1.2.3' // EPL
    compile 'ch.qos.logback:logback-classic:1.2.3' // EPL

    runtime group: 'org.xerial', name: 'sqlite-jdbc', version: '3.28.0'

    compile "javax.xml.bind:jaxb-api:2.4.0-b180830.0359"
    compile "com.sun.xml.bind:jaxb-core:2.3.0.1"
}
ext.moduleName ="de.hhu.stups.modelgenerator"

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        final def nonModules = ["activation", "sqlite-dialect", "parboiled", "c3p0"]
        options.compilerArgs = [
            '--module-path', classpath.filter{ final cp -> !nonModules.any{cp.name.contains(it)} }.asPath,
        ]
        classpath = classpath.filter{ final cp -> nonModules.any { cp.name.contains(it)} }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Model generator for timetable data',
                'Implementation-Version': archiveVersion,
                'Main-Class': mainClassName
    }
}

shadowJar {
    archiveBaseName.set(project.name + '-standalone')
    archiveClassifier.set(null)
}
